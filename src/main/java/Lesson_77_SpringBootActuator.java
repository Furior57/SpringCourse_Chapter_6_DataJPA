public class Lesson_77_SpringBootActuator {
    // В программировании есть понятие endpoints. Мы как разработчики создали приложение и
    // успешно запустили его на сервере. Но для самого приложения работа в этот момент только
    // начинается. И за работой нужно следить. В программировании есть такое понятие как endpoints.
    // Это некий API, который позволяет протестировать рабочий функционал программы.
    // В Spring есть отдельный пакет называемый Actuator. Он автоматически будет создавать
    // эндпоинты. По старой традиции добавим зависимость.

    // Работает Actuator на REST запросах. Что мы можем мониторить?
    // /actuator/health - информация о статусе приложения
    // /actuator/info - информация о приложении
    // /actuator/beans - информация о всех бинах зарегистрированных в контейнере
    // /actuator/mapping - информация о всех маппингах

    // По умолчанию для HTTP запросов запрещен доступ к энпоинтам. Включать его надо в файле
    // application.properties. Как и многое другое. Это очень гибкий инструмент. Например,
    // мы можем включить доступ к мониторингу только по авторизации. Можем
    // настроить список выводимой информации в /actuator/health, по умолчанию, если
    // с приложением все в порядке он вернет сообщение "UP" означающее, что приложение
    // работает в штатном режиме. Однако мы можем включить и отображение другой информации,
    // свободное место на диске, статус работы базы данных и т.д.

    // Чуть подробней про авторизацию. Чтобы ограничить доступ к мониторингу, нам достаточно
    // добавить зависимость от Spring Security. Пароль для доступа будет сгенерирован автоматически.
    // Посмотреть его можно будет в консоли загрузки. Ну либо в настройках прописать
    // свой собственный./


}
